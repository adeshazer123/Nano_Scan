2025-02-07 14:51:33,985 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 14:52:47,123 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 14:52:53,724 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 14:52:57,358 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 21:12:51,151 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:12:51,151 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:12:51,169 pyvisa DEBUG No user defined configuration
2025-02-07 21:12:51,171 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:12:51,171 pyvisa DEBUG No user defined library files
2025-02-07 21:12:51,171 pyvisa DEBUG The IVI implementation available
2025-02-07 21:12:51,171 pyvisa DEBUG No user defined configuration
2025-02-07 21:12:51,171 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:12:51,171 pyvisa DEBUG No user defined library files
2025-02-07 21:12:51,231 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 21:12:51,231 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 21:12:51,491 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x0000020F7E5CACD0>',) -> 0
2025-02-07 21:12:51,491 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 21:12:51,492 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x0000020F7E621450>, <ctypes.c_char_Array_256 object at 0x0000020F7E6214D0>, <ctypes.c_char_Array_256 object at 0x0000020F7E621550>) -> 0
2025-02-07 21:12:51,492 pyvisa DEBUG COM3 - opening ...
2025-02-07 21:12:51,504 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000020F7E621550>') -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 21:12:51,504 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 21:12:51,504 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:12:51,504 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:12:51,504 pyvisa DEBUG No user defined configuration
2025-02-07 21:12:51,514 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:12:51,514 pyvisa DEBUG No user defined library files
2025-02-07 21:12:51,514 pyvisa DEBUG The IVI implementation available
2025-02-07 21:12:51,514 pyvisa DEBUG No user defined configuration
2025-02-07 21:12:51,514 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:12:51,514 pyvisa DEBUG No user defined library files
2025-02-07 21:12:51,514 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 21:12:51,514 pyvisa DEBUG viParseRsrcEx(4097, 'COM4', 'c_ushort(4)', 'c_ushort(4)', <ctypes.c_char_Array_256 object at 0x0000020F7E6221D0>, <ctypes.c_char_Array_256 object at 0x0000020F7E6222D0>, <ctypes.c_char_Array_256 object at 0x0000020F7E622250>) -> 0
2025-02-07 21:12:51,514 pyvisa DEBUG COM4 - opening ...
2025-02-07 21:12:51,514 pyvisa DEBUG viOpen(4097, 'COM4', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000020F7E6222D0>') -> -1073807343
2025-02-07 21:12:51,543 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 21:12:51,543 pyvisa DEBUG COM3 - closing
2025-02-07 21:12:51,543 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:12:51,543 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:12:51,550 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 21:12:51,550 pyvisa DEBUG COM3 - is closed
2025-02-07 21:12:51,554 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 21:17:42,631 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:17:42,631 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:17:42,641 pyvisa DEBUG No user defined configuration
2025-02-07 21:17:42,641 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:17:42,641 pyvisa DEBUG No user defined library files
2025-02-07 21:17:42,651 pyvisa DEBUG The IVI implementation available
2025-02-07 21:17:42,651 pyvisa DEBUG No user defined configuration
2025-02-07 21:17:42,653 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:17:42,653 pyvisa DEBUG No user defined library files
2025-02-07 21:17:42,716 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 21:17:42,716 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 21:17:43,050 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x0000019F3049ACD0>',) -> 0
2025-02-07 21:17:43,050 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 21:17:43,050 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x0000019F304F1450>, <ctypes.c_char_Array_256 object at 0x0000019F304F14D0>, <ctypes.c_char_Array_256 object at 0x0000019F304F1550>) -> 0
2025-02-07 21:17:43,050 pyvisa DEBUG COM3 - opening ...
2025-02-07 21:17:43,089 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000019F304F1550>') -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 21:17:43,089 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 21:17:43,089 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:17:43,089 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:17:43,089 pyvisa DEBUG No user defined configuration
2025-02-07 21:17:43,089 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:17:43,089 pyvisa DEBUG No user defined library files
2025-02-07 21:17:43,089 pyvisa DEBUG The IVI implementation available
2025-02-07 21:17:43,089 pyvisa DEBUG No user defined configuration
2025-02-07 21:17:43,099 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:17:43,099 pyvisa DEBUG No user defined library files
2025-02-07 21:17:43,099 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 21:17:43,099 pyvisa DEBUG viParseRsrcEx(4097, 'COM4', 'c_ushort(4)', 'c_ushort(4)', <ctypes.c_char_Array_256 object at 0x0000019F304F21D0>, <ctypes.c_char_Array_256 object at 0x0000019F304F22D0>, <ctypes.c_char_Array_256 object at 0x0000019F304F2250>) -> 0
2025-02-07 21:17:43,099 pyvisa DEBUG COM4 - opening ...
2025-02-07 21:17:43,099 pyvisa DEBUG viOpen(4097, 'COM4', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000019F304F22D0>') -> -1073807343
2025-02-07 21:17:43,129 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 21:17:43,129 pyvisa DEBUG COM3 - closing
2025-02-07 21:17:43,129 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:17:43,129 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:17:43,130 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 21:17:43,130 pyvisa DEBUG COM3 - is closed
2025-02-07 21:17:43,143 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 21:18:13,712 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 21:46:00,683 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:46:00,683 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:46:00,691 pyvisa DEBUG No user defined configuration
2025-02-07 21:46:00,694 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:46:00,694 pyvisa DEBUG No user defined library files
2025-02-07 21:46:00,694 pyvisa DEBUG The IVI implementation available
2025-02-07 21:46:00,694 pyvisa DEBUG No user defined configuration
2025-02-07 21:46:00,699 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:46:00,700 pyvisa DEBUG No user defined library files
2025-02-07 21:46:00,702 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 21:46:00,702 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 21:46:00,745 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000001F66080ACD0>',) -> 0
2025-02-07 21:46:00,745 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 21:46:00,745 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000001F660865450>, <ctypes.c_char_Array_256 object at 0x000001F6608654D0>, <ctypes.c_char_Array_256 object at 0x000001F660865550>) -> 0
2025-02-07 21:46:00,745 pyvisa DEBUG COM3 - opening ...
2025-02-07 21:46:00,762 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001F660865550>') -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 21:46:00,762 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 21:46:00,762 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:46:00,762 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:46:00,762 pyvisa DEBUG No user defined configuration
2025-02-07 21:46:00,762 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:46:00,762 pyvisa DEBUG No user defined library files
2025-02-07 21:46:00,762 pyvisa DEBUG The IVI implementation available
2025-02-07 21:46:00,762 pyvisa DEBUG No user defined configuration
2025-02-07 21:46:00,772 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:46:00,774 pyvisa DEBUG No user defined library files
2025-02-07 21:46:00,774 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 21:46:00,774 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000001F6608661D0>, <ctypes.c_char_Array_256 object at 0x000001F6608662D0>, <ctypes.c_char_Array_256 object at 0x000001F660866250>) -> 0
2025-02-07 21:46:00,774 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 21:46:00,776 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001F6608661D0>') -> 0
2025-02-07 21:46:00,776 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 21:46:00,776 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:46:00,776 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:00,776 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:00,783 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F6608668D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:46:00,990 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:00,990 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:00,990 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660866950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:01,191 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:01,191 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:01,191 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660866C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:01,392 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:01,392 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:01,392 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660866F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:01,593 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:01,593 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:01,593 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:01,794 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:01,794 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:01,794 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:01,995 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:01,995 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:01,995 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:02,195 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:02,195 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:02,195 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660865750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:02,396 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:02,396 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:02,396 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:02,597 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:02,597 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:02,597 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:02,798 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:02,798 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:02,798 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:02,999 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:02,999 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:02,999 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:03,199 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:03,199 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:03,199 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660865750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:03,400 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:03,400 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:03,400 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:03,601 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:03,601 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:03,601 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:03,802 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:03,802 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:03,802 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:04,002 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:04,002 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:04,002 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:04,203 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:04,203 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:04,203 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660865750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:04,404 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:04,404 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:04,404 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:04,604 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:04,604 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:04,604 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:04,805 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:04,805 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:04,805 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,005 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,005 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660865750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,005 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,005 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:46:05,207 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,207 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,207 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:05,408 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,408 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,408 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867C50>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:46:05,609 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,609 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,609 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:05,809 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:05,809 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:05,809 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F6608678D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:06,010 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:06,010 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:06,010 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:06,211 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:06,211 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:06,211 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:06,412 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:06,412 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:06,412 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:06,613 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:06,613 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:06,613 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:06,813 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:06,813 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:06,813 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F6608678D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:07,014 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:07,014 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:07,014 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:07,215 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:07,215 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:07,215 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:07,415 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:07,415 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:07,415 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:07,616 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:07,616 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:07,616 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:07,817 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:07,817 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:07,817 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F6608678D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,018 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:08,018 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:08,018 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,218 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:08,218 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:08,218 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,419 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:08,419 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:08,419 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,620 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:08,620 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:08,620 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F660867A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,622 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 21:46:08,622 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 21:46:08,622 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:46:08,622 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:46:08,622 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F6608678D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:46:08,626 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 21:46:08,626 pyvisa DEBUG COM3 - closing
2025-02-07 21:46:08,626 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:46:08,626 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:46:08,634 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 21:46:08,634 pyvisa DEBUG COM3 - is closed
2025-02-07 21:46:08,634 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 21:46:08,634 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:46:08,634 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:46:08,634 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 21:46:08,634 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 21:46:08,638 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 21:47:14,350 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:47:14,352 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:47:14,359 pyvisa DEBUG No user defined configuration
2025-02-07 21:47:14,361 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:47:14,361 pyvisa DEBUG No user defined library files
2025-02-07 21:47:14,361 pyvisa DEBUG The IVI implementation available
2025-02-07 21:47:14,363 pyvisa DEBUG No user defined configuration
2025-02-07 21:47:14,365 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:47:14,365 pyvisa DEBUG No user defined library files
2025-02-07 21:47:14,370 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 21:47:14,370 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 21:47:14,413 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x00000205AC8FACD0>',) -> 0
2025-02-07 21:47:14,413 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 21:47:14,415 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x00000205AC955450>, <ctypes.c_char_Array_256 object at 0x00000205AC9554D0>, <ctypes.c_char_Array_256 object at 0x00000205AC955550>) -> 0
2025-02-07 21:47:14,415 pyvisa DEBUG COM3 - opening ...
2025-02-07 21:47:14,433 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000205AC955550>') -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 21:47:14,433 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 21:47:14,433 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 21:47:14,433 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 21:47:14,435 pyvisa DEBUG No user defined configuration
2025-02-07 21:47:14,437 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:47:14,439 pyvisa DEBUG No user defined library files
2025-02-07 21:47:14,439 pyvisa DEBUG The IVI implementation available
2025-02-07 21:47:14,439 pyvisa DEBUG No user defined configuration
2025-02-07 21:47:14,441 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 21:47:14,442 pyvisa DEBUG No user defined library files
2025-02-07 21:47:14,442 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 21:47:14,442 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x00000205AC9561D0>, <ctypes.c_char_Array_256 object at 0x00000205AC9562D0>, <ctypes.c_char_Array_256 object at 0x00000205AC956250>) -> 0
2025-02-07 21:47:14,444 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 21:47:14,446 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000205AC9561D0>') -> 0
2025-02-07 21:47:14,446 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 21:47:14,448 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:47:14,448 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:14,448 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:14,449 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC9568D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:14,449 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:47:14,451 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:14,451 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:14,451 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC956950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:47:14,653 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:14,653 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:14,653 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC956DD0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:47:14,854 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:14,854 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:14,854 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC9570D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:14,854 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 21:47:14,854 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:14,854 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:14,854 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC9573D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:47:15,055 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:15,055 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:15,055 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:15,256 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:15,256 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:15,256 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC955750>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:47:15,457 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:15,457 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:15,457 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:15,658 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:15,658 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:15,658 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:15,858 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:15,858 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:15,858 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:16,059 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:16,059 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:16,059 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957850>, 20480, 'c_ulong(4)') -> 0
2025-02-07 21:47:16,260 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:16,260 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:16,260 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC955750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:16,460 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:16,460 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:16,460 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:16,661 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:16,661 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:16,661 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:16,862 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:16,862 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:16,862 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:17,062 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:17,062 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:17,062 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:17,263 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:17,263 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:17,263 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC955750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:17,463 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:17,463 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:17,463 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:17,664 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:17,664 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:17,664 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:17,865 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:17,865 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:17,865 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,066 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,066 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,066 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,266 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,266 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,266 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC955750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,467 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,467 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,467 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,668 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,668 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,668 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,869 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,869 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,869 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,869 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 21:47:18,870 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 21:47:18,870 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 21:47:18,870 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 21:47:18,870 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000205AC957850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 21:47:18,937 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 21:47:19,350 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 21:47:19,361 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 21:47:19,407 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 21:47:19,407 pyvisa DEBUG COM3 - closing
2025-02-07 21:47:19,407 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:47:19,407 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:47:19,415 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 21:47:19,415 pyvisa DEBUG COM3 - is closed
2025-02-07 21:47:19,415 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 21:47:19,415 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 21:47:19,415 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 21:47:19,415 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 21:47:19,415 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 21:47:19,418 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:04:37,195 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:04:37,195 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:04:37,202 pyvisa DEBUG No user defined configuration
2025-02-07 22:04:37,203 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:04:37,203 pyvisa DEBUG No user defined library files
2025-02-07 22:04:37,203 pyvisa DEBUG The IVI implementation available
2025-02-07 22:04:37,203 pyvisa DEBUG No user defined configuration
2025-02-07 22:04:37,203 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:04:37,203 pyvisa DEBUG No user defined library files
2025-02-07 22:04:37,214 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:04:37,214 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:04:37,259 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000001F746B4ACD0>',) -> 0
2025-02-07 22:04:37,259 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:04:37,261 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000001F746BA1450>, <ctypes.c_char_Array_256 object at 0x000001F746BA14D0>, <ctypes.c_char_Array_256 object at 0x000001F746BA1550>) -> 0
2025-02-07 22:04:37,261 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:04:37,277 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001F746BA1550>') -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:04:37,277 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:04:37,277 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:04:37,277 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:04:37,284 pyvisa DEBUG No user defined configuration
2025-02-07 22:04:37,286 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:04:37,286 pyvisa DEBUG No user defined library files
2025-02-07 22:04:37,286 pyvisa DEBUG The IVI implementation available
2025-02-07 22:04:37,286 pyvisa DEBUG No user defined configuration
2025-02-07 22:04:37,286 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:04:37,286 pyvisa DEBUG No user defined library files
2025-02-07 22:04:37,286 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:04:37,286 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000001F746BA21D0>, <ctypes.c_char_Array_256 object at 0x000001F746BA22D0>, <ctypes.c_char_Array_256 object at 0x000001F746BA2250>) -> 0
2025-02-07 22:04:37,286 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:04:37,286 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001F746BA21D0>') -> 0
2025-02-07 22:04:37,286 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:04:37,286 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:04:37,296 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:37,296 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:37,306 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA28D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:04:37,507 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:37,507 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:37,507 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA2950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:37,708 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:37,708 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:37,708 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA2C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:37,909 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:37,909 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:37,909 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA2F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:38,110 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:38,110 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:38,110 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:38,310 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:38,310 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:38,310 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:38,511 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:38,511 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:38,511 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:38,712 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:38,712 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:38,712 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:38,913 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:38,913 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:38,913 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:39,114 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:39,114 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:39,114 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:39,314 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:39,314 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:39,314 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:39,515 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:39,515 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:39,515 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:39,716 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:39,716 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:39,716 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:39,917 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:39,917 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:39,917 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:40,117 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,117 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,117 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,318 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,318 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,318 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,318 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:04:40,523 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,523 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,523 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:40,723 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,723 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,723 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3C50>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:04:40,924 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:40,924 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:40,924 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:41,125 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:41,125 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:41,125 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:41,325 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:41,325 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:41,325 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:41,526 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:41,526 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:41,526 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:41,726 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:41,726 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:41,726 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:41,927 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:41,927 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:41,927 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:42,128 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:42,128 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:42,128 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:42,328 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:42,328 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:42,328 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:42,529 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:42,529 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:42,529 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:42,730 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:42,730 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:42,730 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:42,931 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:42,931 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:42,931 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:43,132 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:43,132 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:43,132 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:43,332 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:43,332 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:43,332 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:43,533 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:43,533 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:43,533 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:43,734 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:43,734 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:43,734 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:43,934 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:43,934 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:43,934 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:44,135 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:44,135 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:44,135 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:44,336 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:44,336 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001F746BA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:44,336 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:44,431 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746BA3550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:44,493 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,639 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,649 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:04:44,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,651 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,652 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:04:44,653 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:04:45,210 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:45,210 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:45,226 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741B3D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:45,785 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:45,785 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:45,807 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741A450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:46,366 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:46,366 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:46,386 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741BF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:46,948 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:46,948 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:46,971 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741A850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:47,528 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:47,528 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:47,550 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D9550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:48,108 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:48,108 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:48,128 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F7474192D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:48,678 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:48,678 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:48,831 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D9DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:49,390 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:49,390 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:49,412 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6DAF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:49,963 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:49,963 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:49,984 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D8950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:50,534 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:50,534 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:50,556 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D97D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:51,115 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:51,115 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:51,237 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D8350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:51,799 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:51,799 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:51,822 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6DBC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:52,374 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:52,374 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:52,392 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6DA450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:52,955 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:52,955 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:52,977 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F4650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:53,528 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:53,528 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:53,549 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F57D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:54,101 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:54,101 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:54,123 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D90D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:54,675 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:54,675 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:54,696 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F4C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:55,248 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:55,248 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:55,269 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6DA250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:56,110 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:56,110 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:56,130 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F6CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:04:56,688 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:04:56,688 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:04:56,744 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:00,118 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:00,118 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:00,141 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F5950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:00,695 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:00,695 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:00,711 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F55D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:01,272 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:01,272 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:01,290 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6DAA50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:01,853 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:01,853 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:01,876 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746C0A150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:02,429 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:02,429 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:02,451 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746C38E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:03,010 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:03,010 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:03,123 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746BCABD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:03,691 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:03,691 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:03,714 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746BCA950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:04,273 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:04,273 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:04,287 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:04,848 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:04,848 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:04,870 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74A6D96D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:05,430 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:05,430 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:05,451 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:06,008 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:06,008 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:06,026 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746C5B0D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:06,588 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:06,588 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:06,603 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741B550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:07,164 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:07,164 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:07,186 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F71D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:07,737 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:07,737 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:07,759 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:08,333 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:08,333 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:08,349 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F68D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:08,922 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:08,922 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:08,944 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F7474192D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:09,513 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:09,513 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:09,536 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F48D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:10,104 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:10,104 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:10,121 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:10,703 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:10,703 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:10,831 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F76D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:11,401 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:11,401 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:11,423 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F5ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:11,986 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:11,986 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:12,008 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:12,570 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:12,570 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:12,593 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:13,153 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:13,153 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:13,235 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7F50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:13,806 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:13,806 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:13,827 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BCD50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:14,388 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:14,388 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:14,407 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BDD50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:14,969 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:14,969 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:14,986 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F54D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:15,548 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:15,548 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:15,561 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BD750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:16,123 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:16,123 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:16,145 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747418850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:16,703 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:16,703 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:16,722 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746BA26D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:17,284 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:17,284 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:17,428 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746BA2750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:17,989 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:17,989 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:18,009 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F76D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:18,571 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:18,571 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:18,736 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F746C08E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:19,298 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:19,298 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:19,320 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F6150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:19,879 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:19,879 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:19,894 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F57D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:20,456 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:20,456 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:20,479 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:21,037 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:21,037 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:21,059 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F5550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:21,612 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:21,612 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:21,631 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F77D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:22,191 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:22,191 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:22,212 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F6050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:22,763 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:22,763 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:22,784 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BD850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:23,346 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:23,346 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:23,365 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F5650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:23,932 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:23,932 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:24,238 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BC550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:24,799 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:24,799 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:24,821 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BD350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:25,379 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:25,379 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:25,400 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BCE50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:25,961 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:25,961 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:25,984 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F4B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:26,536 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:26,536 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:26,553 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BE850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:27,113 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:27,113 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:27,136 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:27,694 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:27,694 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:27,717 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BCF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:28,277 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:28,277 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:28,430 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BE350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:28,990 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:28,990 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:29,012 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF2D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:29,569 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:29,569 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:29,740 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A8B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:30,302 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:30,302 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:30,321 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A9C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:30,883 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:30,883 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:30,904 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:31,462 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:31,462 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:31,483 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A9BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:32,042 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:32,042 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:32,064 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7D50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:32,623 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:32,623 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:32,642 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F7050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:33,204 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:33,204 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:33,225 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F69D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:33,786 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:33,786 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:33,931 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F4A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:34,482 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:34,482 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:34,504 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:35,055 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:35,055 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:35,243 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D3F61D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:35,802 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:35,802 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:35,820 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:36,382 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:36,382 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:36,404 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419D50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:36,962 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:36,962 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:36,985 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741B450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:37,543 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:37,543 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:37,565 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747418850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:38,124 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:38,124 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:38,142 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741A550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:38,707 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:38,707 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:38,728 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74741A150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:39,287 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:39,287 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:39,431 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BC350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:39,989 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:39,989 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:40,005 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BE1D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:40,567 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:40,567 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:40,742 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF0D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:41,304 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:41,304 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:41,318 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BDDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:41,880 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:41,880 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:41,901 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF3D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:42,461 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:42,461 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:42,475 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BD150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:43,042 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:43,042 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:43,063 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BC750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:43,623 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:43,623 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:43,645 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BF7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:44,202 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:44,202 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:44,224 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BC250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:44,783 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:44,783 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:44,925 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A9C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:45,488 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:45,488 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:45,506 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A9950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:46,070 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:46,070 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:46,239 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4BC2D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:46,804 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:46,804 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:46,825 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F74D4A9050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:47,385 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:05:47,385 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:05:47,407 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001F747419ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:05:50,297 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x000001F74D3B7510>
2025-02-07 22:05:50,313 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:05:50,313 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:05:50,313 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:05:50,313 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:05:50,313 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:05:50,313 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:05:50,313 pyvisa DEBUG COM3 - closing
2025-02-07 22:05:50,313 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:05:50,313 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:05:50,319 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:05:50,319 pyvisa DEBUG COM3 - is closed
2025-02-07 22:05:50,322 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:08:43,313 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:08:43,313 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:08:43,323 pyvisa DEBUG No user defined configuration
2025-02-07 22:08:43,323 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:08:43,323 pyvisa DEBUG No user defined library files
2025-02-07 22:08:43,323 pyvisa DEBUG The IVI implementation available
2025-02-07 22:08:43,323 pyvisa DEBUG No user defined configuration
2025-02-07 22:08:43,333 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:08:43,333 pyvisa DEBUG No user defined library files
2025-02-07 22:08:43,339 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:08:43,339 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:08:43,374 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x0000026A4FA1ACD0>',) -> 0
2025-02-07 22:08:43,374 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:08:43,384 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x0000026A4FA71450>, <ctypes.c_char_Array_256 object at 0x0000026A4FA714D0>, <ctypes.c_char_Array_256 object at 0x0000026A4FA71550>) -> 0
2025-02-07 22:08:43,384 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:08:43,394 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000026A4FA71550>') -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:08:43,394 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:08:43,394 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:08:43,394 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:08:43,394 pyvisa DEBUG No user defined configuration
2025-02-07 22:08:43,394 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:08:43,401 pyvisa DEBUG No user defined library files
2025-02-07 22:08:43,401 pyvisa DEBUG The IVI implementation available
2025-02-07 22:08:43,401 pyvisa DEBUG No user defined configuration
2025-02-07 22:08:43,404 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:08:43,404 pyvisa DEBUG No user defined library files
2025-02-07 22:08:43,404 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:08:43,404 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x0000026A4FA721D0>, <ctypes.c_char_Array_256 object at 0x0000026A4FA722D0>, <ctypes.c_char_Array_256 object at 0x0000026A4FA72250>) -> 0
2025-02-07 22:08:43,404 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:08:43,404 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000026A4FA721D0>') -> 0
2025-02-07 22:08:43,404 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:08:43,404 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:08:43,404 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:43,404 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:43,414 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA728D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:08:43,617 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:43,617 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:43,617 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA72950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:43,817 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:43,817 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:43,817 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA72C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:44,018 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:44,018 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:44,018 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA72F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:44,219 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:44,219 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:44,219 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:44,420 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:44,420 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:44,420 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:44,621 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:44,621 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:44,621 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:44,822 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:44,822 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:44,822 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:45,022 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:45,022 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:45,022 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:45,223 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:45,223 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:45,223 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:45,424 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:45,424 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:45,424 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:45,625 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:45,625 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:45,625 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:45,826 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:45,826 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:45,826 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,027 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,027 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,027 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,227 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,227 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,227 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,428 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,428 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,428 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,629 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,629 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,629 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,830 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,830 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:46,830 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:46,830 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:08:47,038 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:47,038 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:47,038 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:47,238 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:47,238 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:47,238 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73C50>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:08:47,439 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:47,439 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:47,439 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:47,639 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:47,639 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:47,639 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA738D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:47,840 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:47,840 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:47,840 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:48,041 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:48,041 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:48,041 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:48,241 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:48,241 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:48,241 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:48,442 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:48,442 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:48,442 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:48,643 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:48,643 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:48,643 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA738D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:48,844 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:48,844 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:48,844 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:49,044 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:49,044 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:49,044 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:49,245 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:49,245 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:49,245 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:49,446 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:49,446 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:49,446 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:49,646 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:49,646 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:49,646 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA738D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:49,847 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:49,847 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:49,847 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,048 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,048 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,048 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,248 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,248 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,248 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,449 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,449 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,449 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,650 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,650 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,650 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA738D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,653 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:08:50,653 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:08:50,656 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,656 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,656 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000026A4FA73550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:08:50,657 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:50,657 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:50,679 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FA738D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:50,740 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,886 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,896 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:08:50,897 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:08:50,899 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:08:51,458 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:51,458 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:51,480 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BB3D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:52,040 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:52,040 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:52,062 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BA450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:52,614 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:52,614 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:52,634 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BBF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:53,185 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:53,185 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:53,239 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BA850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:53,797 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:53,797 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:53,818 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A52639550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:54,379 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:54,379 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:54,400 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B92D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:54,959 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:54,959 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:54,980 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A52639DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:55,540 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:55,540 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:55,561 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263AF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:56,121 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:56,121 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:56,141 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A52638950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:56,703 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:56,703 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:56,724 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A526397D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:57,284 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:57,284 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:57,418 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A52638350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:57,979 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:57,979 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:57,999 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263BC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:58,560 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:58,560 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:58,737 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263A450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:59,296 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:59,296 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:59,319 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:08:59,878 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:08:59,878 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:08:59,898 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563157D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:00,452 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:00,452 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:00,474 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A526390D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:01,033 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:01,033 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:01,053 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:01,614 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:01,614 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:01,628 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263A250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:02,189 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:02,189 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:02,206 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563168D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:02,767 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:02,767 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:02,788 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563177D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:03,349 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:03,349 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:03,368 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56315950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:03,929 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:03,929 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:04,234 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317F50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:04,794 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:04,794 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:04,812 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263AA50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:05,372 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:05,372 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:05,394 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FADDFD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:05,953 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:05,953 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:05,972 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A2C7385D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:06,534 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:06,534 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:06,556 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FA995D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:07,111 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:07,111 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:07,124 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A526396D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:07,685 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:07,685 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:07,708 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B98D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:08,267 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:08,267 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:08,287 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5263ADD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:08,838 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:08,838 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:08,861 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BB050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:09,420 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:09,420 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:09,738 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FA991D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:10,296 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:10,296 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:10,313 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BA6D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:10,873 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:10,873 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:10,896 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:11,455 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:11,455 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:11,474 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BB950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:12,036 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:12,036 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:12,058 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:12,617 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:12,617 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:12,635 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B9ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:13,197 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:13,197 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:13,214 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563160D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:13,779 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:13,779 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:13,921 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BBF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:14,484 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:14,484 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:14,502 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:15,064 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:15,064 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:15,236 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56316BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:15,797 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:15,797 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:15,815 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317D50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:16,377 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:16,377 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:16,396 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:16,959 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:16,959 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:16,976 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:17,536 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:17,536 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:17,557 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4D50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:18,116 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:18,116 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:18,136 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5D50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:18,698 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:18,698 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:18,720 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563169D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:19,281 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:19,281 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:19,420 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:19,986 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:19,986 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:20,008 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BA650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:20,569 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:20,569 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:20,730 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:21,296 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:21,296 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:21,319 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A4FA71850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:21,869 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:21,869 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:21,892 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:22,452 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:22,452 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:22,473 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A2C73A150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:23,034 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:23,034 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:23,056 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:23,617 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:23,617 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:23,630 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563157D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:24,198 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:24,198 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:24,219 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563173D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:24,779 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:24,779 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:24,922 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56316750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:25,486 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:25,486 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:25,505 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:26,066 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:26,066 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:26,239 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563153D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:26,799 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:26,799 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:26,821 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:27,382 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:27,382 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:27,404 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56317350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:27,963 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:27,963 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:27,986 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:28,546 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:28,546 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:28,567 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:29,130 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:29,130 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:29,152 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:29,732 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:29,732 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:29,755 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563172D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:30,329 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:30,329 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:30,427 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E6850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:30,995 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:30,995 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:31,017 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E7750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:31,579 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:31,579 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:31,734 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4F50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:32,306 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:32,306 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:32,327 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E6350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:32,899 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:32,899 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:32,914 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E72D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:33,486 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:33,486 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:33,509 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642CB50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:34,083 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:34,083 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:34,100 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642DC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:34,672 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:34,672 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:34,825 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E7450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:35,393 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:35,393 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:35,414 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642DBD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:36,001 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:36,001 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:36,019 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56315ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:36,591 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:36,591 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:36,608 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563170D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:37,180 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:37,180 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:37,229 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56316FD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:37,801 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:37,801 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:37,822 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A56314A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:38,390 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:38,390 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:38,409 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B91D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:38,971 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:38,971 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:38,988 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563161D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:39,571 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:39,571 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:39,593 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B91D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:40,162 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:40,162 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:40,183 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B81D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:40,742 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:40,742 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:40,762 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B9AD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:41,335 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:41,335 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:41,425 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BB350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:41,996 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:41,996 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:42,019 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502B9B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:42,586 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:42,586 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:42,737 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BB050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:43,312 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:43,312 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:43,329 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:43,901 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:43,901 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:43,919 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E61D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:44,491 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:44,491 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:44,506 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E70D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:45,083 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:45,083 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:45,104 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:45,684 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:45,684 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:45,820 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E73D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:46,392 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:46,392 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:46,413 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E5150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:46,986 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:46,986 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:47,009 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:47,578 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:47,578 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:47,600 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E77D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:48,163 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:48,163 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:48,230 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E4250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:48,803 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:48,803 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:48,820 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642DC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:49,392 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:49,392 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:49,409 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642D950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:49,982 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:49,982 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:50,002 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A563E42D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:50,565 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:50,565 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:50,588 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A5642D050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:51,148 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:09:51,148 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:09:51,169 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026A502BA6D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:09:51,735 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x0000026A525DF7D0>
2025-02-07 22:09:51,801 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:09:51,801 pyvisa DEBUG COM3 - closing
2025-02-07 22:09:51,801 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:09:51,801 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:09:51,811 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:09:51,811 pyvisa DEBUG COM3 - is closed
2025-02-07 22:09:51,811 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:09:51,811 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:09:51,812 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:09:51,812 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:09:51,812 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:09:51,816 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:10:35,455 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:10:35,455 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:10:35,463 pyvisa DEBUG No user defined configuration
2025-02-07 22:10:35,464 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:10:35,464 pyvisa DEBUG No user defined library files
2025-02-07 22:10:35,464 pyvisa DEBUG The IVI implementation available
2025-02-07 22:10:35,464 pyvisa DEBUG No user defined configuration
2025-02-07 22:10:35,469 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:10:35,471 pyvisa DEBUG No user defined library files
2025-02-07 22:10:35,476 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:10:35,476 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:10:35,521 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000002420CC9ACD0>',) -> 0
2025-02-07 22:10:35,523 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:10:35,523 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000002420CCF5450>, <ctypes.c_char_Array_256 object at 0x000002420CCF54D0>, <ctypes.c_char_Array_256 object at 0x000002420CCF5550>) -> 0
2025-02-07 22:10:35,523 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:10:35,535 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002420CCF5550>') -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:10:35,535 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:10:35,535 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:10:35,535 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:10:35,535 pyvisa DEBUG No user defined configuration
2025-02-07 22:10:35,537 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:10:35,537 pyvisa DEBUG No user defined library files
2025-02-07 22:10:35,537 pyvisa DEBUG The IVI implementation available
2025-02-07 22:10:35,537 pyvisa DEBUG No user defined configuration
2025-02-07 22:10:35,537 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:10:35,537 pyvisa DEBUG No user defined library files
2025-02-07 22:10:35,537 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:10:35,537 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000002420CCF61D0>, <ctypes.c_char_Array_256 object at 0x000002420CCF62D0>, <ctypes.c_char_Array_256 object at 0x000002420CCF6250>) -> 0
2025-02-07 22:10:35,537 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:10:35,547 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002420CCF61D0>') -> 0
2025-02-07 22:10:35,547 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:10:35,547 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:10:35,547 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:35,547 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:35,559 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF68D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:10:35,761 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:35,761 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:35,761 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF6950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:35,961 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:35,961 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:35,961 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF6C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:36,162 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:36,162 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:36,162 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF6F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:36,363 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:36,363 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:36,363 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:36,564 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:36,564 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:36,564 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:36,764 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:36,764 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:36,764 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:36,965 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:36,965 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:36,965 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:37,166 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:37,166 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:37,166 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:37,366 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:37,366 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:37,366 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:37,567 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:37,567 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:37,567 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:37,768 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:37,768 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:37,768 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:37,968 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:37,968 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:37,968 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,169 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,169 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,169 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,369 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,369 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,369 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,570 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,570 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,570 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,771 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,771 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,771 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,774 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,774 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,775 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:10:38,975 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:38,975 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:38,975 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:39,176 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:39,176 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:39,176 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF78D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:10:39,376 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:39,376 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:39,376 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:39,577 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:39,577 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:39,577 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:39,778 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:39,778 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:39,778 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:39,978 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:39,978 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:39,978 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:40,179 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:40,179 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:40,179 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:40,380 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:40,380 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:40,380 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:40,580 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:40,580 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:40,580 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:40,781 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:40,781 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:40,781 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:40,981 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:40,981 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:40,981 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:41,182 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:41,182 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:41,182 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:41,383 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:41,383 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:41,383 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:41,584 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:41,584 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:41,584 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:41,784 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:41,784 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:41,784 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:41,985 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:41,985 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:41,985 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,185 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,185 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,185 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,386 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,386 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,386 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,587 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,587 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,587 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,787 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,787 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,787 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,790 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000002420CCF7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:42,790 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:42,811 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CCF7550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:42,870 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,014 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,024 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,026 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:10:43,027 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:10:43,585 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:43,585 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:43,603 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C73D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:44,168 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:44,168 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:44,191 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C6450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:44,748 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:44,748 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:44,770 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7F50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:45,330 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:45,330 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:45,352 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C6850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:45,913 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:45,913 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:45,935 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087D550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:46,497 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:46,497 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:46,519 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C52D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:47,079 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:47,079 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:47,100 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087DDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:47,660 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:47,660 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:47,682 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087EF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:48,243 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:48,243 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:48,264 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087C950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:48,828 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:48,828 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:48,847 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087D7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:49,423 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:49,423 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:49,446 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087C350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:50,011 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:50,011 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:50,033 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087FC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:50,602 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:50,602 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:50,725 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087E450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:51,298 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:51,298 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:51,318 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC8D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:51,891 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:51,891 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:51,914 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ED7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:52,485 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:52,485 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:52,505 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087D0D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:53,077 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:53,077 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:53,100 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ECC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:53,667 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:53,667 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:53,690 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087E250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:54,257 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:54,257 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:54,279 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EE8D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:54,853 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:54,853 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:54,875 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EF7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:55,442 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:55,442 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:55,465 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ED950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:56,028 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:56,028 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:56,050 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EFF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:56,636 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:56,636 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:56,658 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087EA50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:57,238 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:57,238 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:57,319 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CD5DFD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:57,893 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:57,893 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:57,912 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000242699885D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:58,474 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:58,474 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:58,497 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CD155D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:59,071 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:59,071 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:59,092 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087D6D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:10:59,659 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:10:59,659 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:10:59,736 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C58D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:00,307 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:00,308 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:00,327 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002421087EDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:00,899 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:00,899 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:00,921 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:01,493 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:01,494 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:01,516 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CD151D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:02,089 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:02,089 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:02,109 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C66D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:02,684 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:02,684 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:02,823 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ECB50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:03,398 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:03,398 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:03,412 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:03,994 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:03,994 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:04,015 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:04,592 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:04,593 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:04,615 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C5ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:05,181 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:05,181 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:05,248 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EEDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:06,022 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:06,022 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:06,120 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C6E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:06,683 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:06,683 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:06,705 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EEE50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:07,277 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:07,277 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:07,296 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EDED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:07,869 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:07,869 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:07,890 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EECD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:08,463 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:08,464 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:08,486 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EDCD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:09,054 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:09,054 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:09,070 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ED350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:09,648 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:09,648 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:09,670 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A4DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:10,243 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:10,243 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:10,265 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A5DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:10,831 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:10,831 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:10,853 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EDDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:11,430 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:11,430 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:11,443 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A57D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:12,040 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:12,040 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:12,062 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C6650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:12,643 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:12,643 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:12,723 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CCF68D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:13,296 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:13,296 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:13,317 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CD5F450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:13,901 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:13,901 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:13,924 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EEE50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:14,493 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:14,493 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:14,514 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420CD16AD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:15,086 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:15,086 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:15,107 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EE850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:15,672 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:15,672 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:15,694 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ECDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:16,268 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:16,268 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:16,283 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EE850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:16,858 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:16,858 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:16,880 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:17,453 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:17,453 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:17,472 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC1D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:18,039 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:18,039 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:18,061 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EE9D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:18,620 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:18,620 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:18,640 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A56D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:19,212 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:19,212 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:19,315 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EDDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:19,891 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:19,891 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:19,910 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A4DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:20,472 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:20,472 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:20,494 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A5950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:21,070 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:21,070 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:21,089 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A4450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:21,655 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:21,655 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:21,736 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC3D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:22,308 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:22,308 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:22,328 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A68D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:22,901 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:22,901 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:22,923 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A77D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:23,491 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:23,491 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:23,508 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A4750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:24,088 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:24,089 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:24,109 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A63D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:24,680 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:24,680 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:24,823 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A7350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:25,392 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:25,392 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:25,413 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A0BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:25,975 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:25,975 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:25,995 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A1CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:26,556 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:26,556 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:26,579 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A6850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:27,151 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:27,151 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:27,236 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A1C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:27,819 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:27,819 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:27,841 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ED2D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:28,412 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:28,412 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:28,434 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3ED8D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:29,006 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:29,006 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:29,029 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EF7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:29,597 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:29,597 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:29,619 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EE2D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:30,183 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:30,183 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:30,323 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C74D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:30,902 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:30,902 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:30,924 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E3EC8D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:31,488 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:31,488 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:31,510 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C74D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:32,084 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:32,084 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:32,106 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C50D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:32,679 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:32,679 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:32,731 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:33,308 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:33,308 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:33,330 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C73D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:33,902 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:33,902 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:33,923 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C5B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:34,494 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:34,494 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:34,517 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:35,084 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:35,084 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:35,098 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A6250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:35,680 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:35,680 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:35,824 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A6E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:36,397 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:36,397 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:36,412 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A7BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:36,993 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:36,993 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:37,014 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A7550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:37,585 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:37,585 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:37,607 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A68D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:38,174 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:38,174 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:38,236 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A72D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:38,807 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:38,807 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:38,830 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A7AD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:39,410 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:39,410 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:39,432 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A52D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:40,003 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:40,003 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:40,016 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A6450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:40,588 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:40,588 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:40,610 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A0CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:41,188 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:41,188 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:41,319 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A0B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:41,891 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:41,891 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:41,913 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A6C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:42,485 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:42,485 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:42,506 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420E4A1050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:43,088 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:11:43,088 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:11:43,109 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002420D2C7850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:11:43,691 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x00000242107DA590>
2025-02-07 22:11:43,723 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:11:43,723 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:11:43,723 pyvisa DEBUG No user defined configuration
2025-02-07 22:11:43,731 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:11:43,731 pyvisa DEBUG No user defined library files
2025-02-07 22:11:43,731 pyvisa DEBUG The IVI implementation available
2025-02-07 22:11:43,731 pyvisa DEBUG No user defined configuration
2025-02-07 22:11:43,731 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:11:43,731 pyvisa DEBUG No user defined library files
2025-02-07 22:11:43,731 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:11:43,731 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:11:43,731 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:11:43,731 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:11:43,731 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:11:43,731 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:11:43,731 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:11:43,731 pyvisa DEBUG COM3 - closing
2025-02-07 22:11:43,731 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:11:43,731 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:11:43,742 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:11:43,742 pyvisa DEBUG COM3 - is closed
2025-02-07 22:11:43,745 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:12:45,070 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 22:13:25,980 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 22:13:27,814 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 22:14:26,077 asyncio DEBUG Using proactor: IocpProactor
2025-02-07 22:42:18,714 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:42:18,714 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:42:18,731 pyvisa DEBUG No user defined configuration
2025-02-07 22:42:18,733 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:42:18,734 pyvisa DEBUG No user defined library files
2025-02-07 22:42:18,734 pyvisa DEBUG The IVI implementation available
2025-02-07 22:42:18,735 pyvisa DEBUG No user defined configuration
2025-02-07 22:42:18,738 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:42:18,738 pyvisa DEBUG No user defined library files
2025-02-07 22:42:18,789 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:42:18,789 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:42:19,075 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x0000025369B5ACD0>',) -> 0
2025-02-07 22:42:19,075 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:42:19,076 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x0000025369BB5450>, <ctypes.c_char_Array_256 object at 0x0000025369BB54D0>, <ctypes.c_char_Array_256 object at 0x0000025369BB5550>) -> 0
2025-02-07 22:42:19,076 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:42:19,106 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000025369BB5550>') -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:42:19,106 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:42:19,106 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:42:19,106 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:42:19,107 pyvisa DEBUG No user defined configuration
2025-02-07 22:42:19,110 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:42:19,110 pyvisa DEBUG No user defined library files
2025-02-07 22:42:19,110 pyvisa DEBUG The IVI implementation available
2025-02-07 22:42:19,111 pyvisa DEBUG No user defined configuration
2025-02-07 22:42:19,114 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:42:19,115 pyvisa DEBUG No user defined library files
2025-02-07 22:42:19,115 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:42:19,116 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x0000025369BB61D0>, <ctypes.c_char_Array_256 object at 0x0000025369BB62D0>, <ctypes.c_char_Array_256 object at 0x0000025369BB6250>) -> 0
2025-02-07 22:42:19,116 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:42:19,120 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000025369BB61D0>') -> 0
2025-02-07 22:42:19,120 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:42:19,120 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:42:19,156 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:19,157 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:19,169 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB68D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:42:19,370 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:19,370 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:19,370 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB6950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:19,570 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:19,570 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:19,570 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB6C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:19,771 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:19,771 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:19,771 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB6F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:19,972 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:19,972 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:19,972 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:20,173 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:20,173 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:20,173 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:20,374 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:20,374 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:20,374 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:20,574 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:20,574 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:20,574 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:20,775 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:20,775 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:20,775 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:20,976 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:20,976 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:20,976 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:21,177 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:21,177 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:21,177 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:21,378 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:21,378 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:21,378 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:21,578 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:21,578 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:21,578 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:21,779 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:21,779 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:21,779 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:21,980 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:21,980 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:21,980 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,180 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,180 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,180 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,381 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,381 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,381 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,581 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,581 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,581 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB5750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,782 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,782 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,782 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,784 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,784 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,786 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:42:22,986 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:22,986 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:22,986 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:23,187 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:23,187 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:23,187 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB78D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:42:23,388 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:23,388 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:23,388 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:23,589 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:23,589 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:23,589 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:23,789 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:23,789 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:23,789 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:23,990 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:23,990 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:23,990 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:24,191 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:24,191 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:24,191 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:24,391 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:24,391 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:24,391 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:24,592 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:24,592 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:24,592 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:24,793 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:24,793 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:24,793 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:24,993 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:24,993 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:24,993 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:25,194 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:25,194 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:25,194 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:25,395 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:25,395 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:25,395 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:25,595 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:25,595 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:25,595 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:25,796 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:25,796 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:25,796 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:25,997 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:25,997 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:25,997 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:26,198 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:26,198 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:26,198 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:26,399 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:26,399 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:26,399 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:26,427 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000025369BB7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:26,427 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:26,452 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025369BB7850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:26,809 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,422 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,428 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,429 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,430 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,433 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:42:27,434 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:42:27,434 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:42:27,990 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:27,990 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:28,012 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B3D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:28,572 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:28,572 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:28,595 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17A450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:29,152 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:29,152 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:29,283 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17BDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:30,748 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:30,748 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:30,764 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17A850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:31,336 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:31,336 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:31,701 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75D550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:32,272 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:32,272 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:32,294 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A1792D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:32,854 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:32,854 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:32,877 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75DDD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:33,454 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:33,454 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:33,476 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75EF50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:34,048 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:34,048 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:34,070 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75C950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:34,631 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:34,631 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:34,653 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75D7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:35,225 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:35,225 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:35,245 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75C350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:35,809 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:35,809 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:35,889 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75FC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:36,456 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:36,456 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:36,479 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75E450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:37,071 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:37,072 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:37,193 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A08D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:37,766 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:37,766 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:37,788 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A17D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:38,360 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:38,360 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:38,382 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75D0D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:38,953 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:38,953 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:38,975 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A0C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:39,548 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:39,548 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:39,570 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75E250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:40,148 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:40,148 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:40,288 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A28D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:40,855 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:40,855 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:40,873 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A37D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:41,446 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:41,446 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:41,471 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:42,268 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:42,268 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:42,291 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A3F50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:42,878 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:42,878 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:42,900 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75EA50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:43,471 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:43,471 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:43,589 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025369C1CC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:44,176 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:44,176 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:44,198 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75CD50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:44,772 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:44,772 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:44,787 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025369BD95D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:45,360 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:45,360 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:45,383 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75D6D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:45,954 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:45,954 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:45,976 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A179450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:46,549 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:46,549 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:46,572 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536C75E550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:47,146 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:47,147 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:47,162 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:47,745 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:47,745 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:47,761 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025369C6B0D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:48,333 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:48,333 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:48,355 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17A6D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:48,919 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:48,919 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:48,935 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A0B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:49,501 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:49,501 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:49,524 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:50,089 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:50,089 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:50,184 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A0350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:51,537 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:51,537 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:51,559 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A179ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:52,119 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:52,119 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:52,141 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A2DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:52,708 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:52,708 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:52,725 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17A650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:53,284 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:53,284 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:53,298 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A2E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:53,860 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:53,860 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:53,883 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:54,443 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:54,443 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:54,589 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A2CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:55,148 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:55,148 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:55,170 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:55,729 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:55,729 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:55,752 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1350>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:56,303 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:56,303 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:56,322 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:56,883 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:56,883 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:56,905 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B355DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:57,466 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:57,466 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:57,487 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1DD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:58,048 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:58,048 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:58,069 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3557D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:58,629 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:58,629 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:58,652 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025346869250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:59,210 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:59,210 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:59,232 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000025369C48E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:42:59,791 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:42:59,791 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:42:59,812 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A120250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:00,629 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:00,629 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:00,651 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A0850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:01,210 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:01,210 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:01,232 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B9D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:01,792 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:01,792 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:01,812 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:02,373 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:02,373 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:02,393 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A2AD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:02,954 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:02,954 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:02,976 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A33D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:03,533 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:03,533 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:03,553 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:06,217 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:06,217 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:06,234 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A0250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:06,796 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:06,796 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:06,817 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A13D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:07,374 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:07,374 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:07,397 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3551D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:07,956 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:07,956 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:07,973 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A3250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:08,535 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:08,535 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:08,558 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:09,116 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:09,116 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:09,137 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3553D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:09,697 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:09,697 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:09,720 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B355450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:10,276 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:10,276 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:10,298 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A33D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:10,857 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:10,857 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:10,878 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B356850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:11,437 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:11,437 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:11,460 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B357750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:12,015 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:12,015 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:12,037 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:12,596 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:12,596 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:12,609 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:13,172 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:13,172 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:13,288 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3572D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:13,848 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:13,848 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:13,870 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B254B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:14,420 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:14,420 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:14,437 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B255C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:15,005 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:15,005 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:15,027 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B357450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:15,587 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:15,587 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:15,700 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B255BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:16,260 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:16,260 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:16,277 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A1ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:16,838 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:16,838 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:16,860 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A3ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:17,412 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:17,412 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:17,435 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A2ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:17,986 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:17,986 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:18,008 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A3150>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:18,587 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:18,588 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:18,610 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A178850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:19,182 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:19,182 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:19,198 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B2A3B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:19,785 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:19,785 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:19,888 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A178850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:20,454 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:20,454 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:20,474 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A1788D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:21,038 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:21,038 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:21,192 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B9D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:21,771 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:21,771 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:21,794 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A1790D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:22,355 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:22,355 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:22,377 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17AC50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:22,930 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:22,930 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:22,949 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A17B050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:23,514 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:23,514 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:23,536 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3551D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:24,099 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:24,099 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:24,120 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B356650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:24,682 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:24,682 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:24,704 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B356BD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:25,265 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:25,265 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:25,379 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:25,940 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:25,940 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:25,962 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B356850>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:26,516 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:26,516 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:26,700 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B357250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:27,259 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:27,259 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:27,282 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B3566D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:27,838 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:27,838 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:27,860 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B356C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:28,412 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:28,412 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:28,432 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B354950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:28,993 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:28,993 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:29,015 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B255C50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:29,574 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:29,574 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:29,596 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B255950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:30,147 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:30,147 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:30,161 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B357750>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:30,723 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:30,723 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:30,745 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536B255050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:31,302 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:43:31,302 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:43:31,324 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002536A1794D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:43:31,896 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x000002536B399710>
2025-02-07 22:43:31,946 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:43:31,946 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:43:31,946 pyvisa DEBUG No user defined configuration
2025-02-07 22:43:31,948 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:43:31,948 pyvisa DEBUG No user defined library files
2025-02-07 22:43:31,948 pyvisa DEBUG The IVI implementation available
2025-02-07 22:43:31,948 pyvisa DEBUG No user defined configuration
2025-02-07 22:43:31,953 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:43:31,953 pyvisa DEBUG No user defined library files
2025-02-07 22:43:31,953 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:43:31,953 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:43:31,953 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:43:31,953 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:43:31,953 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:43:31,953 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:43:31,953 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:43:31,953 pyvisa DEBUG COM3 - closing
2025-02-07 22:43:31,953 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:43:31,953 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:43:31,953 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:43:31,953 pyvisa DEBUG COM3 - is closed
2025-02-07 22:43:31,964 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:49:12,911 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:49:12,911 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:49:12,922 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:12,922 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:12,922 pyvisa DEBUG No user defined library files
2025-02-07 22:49:12,922 pyvisa DEBUG The IVI implementation available
2025-02-07 22:49:12,922 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:12,922 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:12,922 pyvisa DEBUG No user defined library files
2025-02-07 22:49:12,934 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:49:12,934 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:49:12,973 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x00000212F1C4ACD0>',) -> 0
2025-02-07 22:49:12,973 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:49:12,982 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x00000212F1CA1450>, <ctypes.c_char_Array_256 object at 0x00000212F1CA14D0>, <ctypes.c_char_Array_256 object at 0x00000212F1CA1550>) -> 0
2025-02-07 22:49:12,982 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:49:12,995 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000212F1CA1550>') -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:49:12,995 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:49:12,995 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:49:12,995 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:49:12,995 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:13,003 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:13,003 pyvisa DEBUG No user defined library files
2025-02-07 22:49:13,003 pyvisa DEBUG The IVI implementation available
2025-02-07 22:49:13,003 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:13,003 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:13,003 pyvisa DEBUG No user defined library files
2025-02-07 22:49:13,003 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:49:13,003 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x00000212F1CA21D0>, <ctypes.c_char_Array_256 object at 0x00000212F1CA22D0>, <ctypes.c_char_Array_256 object at 0x00000212F1CA2250>) -> 0
2025-02-07 22:49:13,003 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:49:13,013 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000212F1CA21D0>') -> 0
2025-02-07 22:49:13,013 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:49:13,013 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:49:13,016 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:13,016 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:13,016 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA28D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:49:13,217 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:13,217 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:13,217 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA2950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:13,418 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:13,418 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:13,418 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA2C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:13,619 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:13,619 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:13,619 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA2F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:13,820 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:13,820 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:13,820 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:14,020 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:14,020 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:14,020 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:14,221 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:14,221 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:14,221 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:14,421 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:14,421 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:14,421 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:14,622 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:14,622 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:14,622 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:14,823 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:14,823 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:14,823 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:15,023 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:15,023 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:15,023 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:15,224 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:15,224 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:15,224 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:15,424 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:15,424 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:15,424 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:15,625 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:15,625 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:15,625 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:15,826 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:15,826 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:15,826 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,027 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,027 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,027 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,228 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,228 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,228 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,428 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,428 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,428 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,428 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:49:16,428 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,428 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,428 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,429 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:49:16,429 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,429 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,429 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:49:16,630 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,630 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,630 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:16,831 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:16,831 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:16,831 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3C50>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:49:17,032 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:17,032 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:17,032 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:17,232 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:17,232 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:17,232 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:17,433 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:17,433 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:17,433 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:17,633 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:17,633 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:17,633 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:17,834 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:17,834 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:17,834 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:18,035 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:18,035 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:18,035 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:18,236 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:18,236 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:18,236 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:18,436 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:18,436 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:18,436 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:18,637 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:18,637 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:18,637 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:18,838 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:18,838 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:18,838 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:19,039 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:19,039 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:19,039 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:19,239 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:19,239 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:19,239 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:19,440 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:19,440 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:19,440 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:19,641 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:19,641 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:19,641 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA1750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:19,842 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:19,842 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:19,842 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:20,043 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:20,043 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:20,043 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:20,043 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:49:20,043 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:49:20,047 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:20,047 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:20,047 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000212F1CA38D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:49:20,047 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:20,047 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:20,069 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F1CA3B50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:20,131 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,294 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,295 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,296 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,297 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:49:20,298 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:49:20,299 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:49:20,300 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:49:20,300 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:49:20,854 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:20,854 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:20,871 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F225B250>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:21,574 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:21,574 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:21,593 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F1D0F450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:22,149 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:22,149 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:22,164 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F225BB50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:22,727 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:22,727 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:22,874 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F483C4D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:23,437 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:23,437 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:23,454 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F485D550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:24,015 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:24,015 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:24,184 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F485C550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:24,746 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:24,746 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:24,762 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F485EBD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:25,324 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:49:25,324 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:49:25,340 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000212F485E5D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:49:25,900 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x00000212F8503F90>
2025-02-07 22:49:25,945 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:49:25,947 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:49:25,948 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:25,949 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:25,949 pyvisa DEBUG No user defined library files
2025-02-07 22:49:25,949 pyvisa DEBUG The IVI implementation available
2025-02-07 22:49:25,949 pyvisa DEBUG No user defined configuration
2025-02-07 22:49:25,949 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:49:25,949 pyvisa DEBUG No user defined library files
2025-02-07 22:49:25,949 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:49:25,949 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:49:25,949 pyvisa DEBUG COM3 - closing
2025-02-07 22:49:25,949 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:49:25,949 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:49:25,960 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:49:25,960 pyvisa DEBUG COM3 - is closed
2025-02-07 22:49:25,960 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:49:25,960 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:49:25,960 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:49:25,960 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:49:25,960 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:49:25,960 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:50:20,377 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:50:20,377 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:50:20,384 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:20,387 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:20,388 pyvisa DEBUG No user defined library files
2025-02-07 22:50:20,388 pyvisa DEBUG The IVI implementation available
2025-02-07 22:50:20,388 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:20,391 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:20,392 pyvisa DEBUG No user defined library files
2025-02-07 22:50:20,397 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:50:20,398 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:50:20,444 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000001AD4C3CACD0>',) -> 0
2025-02-07 22:50:20,444 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:50:20,445 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000001AD4C425450>, <ctypes.c_char_Array_256 object at 0x000001AD4C4254D0>, <ctypes.c_char_Array_256 object at 0x000001AD4C425550>) -> 0
2025-02-07 22:50:20,445 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:50:20,455 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001AD4C425550>') -> 0
2025-02-07 22:50:20,455 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:50:20,457 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:50:20,457 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:50:20,457 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:50:20,457 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:50:20,457 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:50:20,457 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:50:20,457 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:50:20,458 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:20,460 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:20,461 pyvisa DEBUG No user defined library files
2025-02-07 22:50:20,461 pyvisa DEBUG The IVI implementation available
2025-02-07 22:50:20,461 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:20,464 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:20,465 pyvisa DEBUG No user defined library files
2025-02-07 22:50:20,465 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:50:20,466 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000001AD4C4261D0>, <ctypes.c_char_Array_256 object at 0x000001AD4C4262D0>, <ctypes.c_char_Array_256 object at 0x000001AD4C426250>) -> 0
2025-02-07 22:50:20,466 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:50:20,470 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001AD4C4261D0>') -> 0
2025-02-07 22:50:20,470 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:50:20,471 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:50:20,471 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:20,471 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:20,478 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C4268D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:50:20,678 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:20,678 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:20,678 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C426950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:20,879 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:20,879 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:20,879 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C426C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:21,080 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:21,080 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:21,080 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C426F50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:21,280 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:21,280 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:21,280 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427250>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:21,481 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:21,481 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:21,481 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:21,682 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:21,682 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:21,682 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:21,882 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:21,882 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:21,882 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C425750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:22,083 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:22,083 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:22,083 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:22,284 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:22,284 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:22,284 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:22,484 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:22,484 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:22,484 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:22,685 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:22,685 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:22,685 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:22,886 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:22,886 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:22,886 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C425750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,087 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,087 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,087 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,287 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,287 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,287 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,488 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,488 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,488 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427B50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,689 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,689 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,689 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,689 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:50:23,689 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,689 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,694 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C425750>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:23,694 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:50:23,694 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,694 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,694 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427550>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:50:23,896 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:23,896 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:23,896 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:24,097 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:24,097 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:24,097 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C4278D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:50:24,298 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:24,298 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:24,298 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:24,499 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:24,499 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:24,499 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:24,700 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:24,700 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:24,700 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:24,900 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:24,900 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:24,900 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:25,101 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:25,101 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:25,101 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C4278D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:25,301 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:25,301 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:25,301 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:25,502 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:25,502 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:25,502 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:25,702 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:25,702 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:25,702 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:25,903 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:25,903 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:25,903 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:26,104 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:26,104 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:26,104 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C4278D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:26,305 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:26,305 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:26,305 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:26,506 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:26,506 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:26,506 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:26,706 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:26,706 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:26,706 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427550>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:26,907 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:26,907 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:26,907 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427850>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:27,108 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:27,108 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:27,108 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C4278D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:27,308 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:27,308 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:27,308 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:27,308 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:50:27,309 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:50:27,311 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:27,311 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:27,311 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AD4C427C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:50:27,311 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:27,311 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:27,334 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4C427A50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:27,403 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,550 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,558 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,559 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:50:27,561 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:50:28,249 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:28,249 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:28,265 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4C4B8E50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:28,828 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:28,828 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:28,880 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4C9FA450>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:29,439 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:29,439 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:29,460 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4C9FBB50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:30,021 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:30,021 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:30,191 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4EFCC4D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:30,741 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:30,741 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:30,762 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4EFED550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:31,322 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:31,322 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:31,341 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4EFEC550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:31,902 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:31,902 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:31,916 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4EFEEBD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:32,483 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:50:32,483 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:50:32,504 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AD4EFEE5D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:50:33,073 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x000001AD4DAAC910>
2025-02-07 22:50:33,112 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:50:33,112 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:50:33,112 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:33,112 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:33,112 pyvisa DEBUG No user defined library files
2025-02-07 22:50:33,112 pyvisa DEBUG The IVI implementation available
2025-02-07 22:50:33,112 pyvisa DEBUG No user defined configuration
2025-02-07 22:50:33,120 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:50:33,120 pyvisa DEBUG No user defined library files
2025-02-07 22:50:33,120 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:50:33,120 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:50:33,120 pyvisa DEBUG COM3 - closing
2025-02-07 22:50:33,120 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:50:33,120 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:50:33,124 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:50:33,124 pyvisa DEBUG COM3 - is closed
2025-02-07 22:50:33,124 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:50:33,124 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:50:33,124 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:50:33,124 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:50:33,124 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:50:33,133 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:54:14,018 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:54:14,018 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:54:14,026 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:14,028 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:14,029 pyvisa DEBUG No user defined library files
2025-02-07 22:54:14,029 pyvisa DEBUG The IVI implementation available
2025-02-07 22:54:14,029 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:14,032 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:14,033 pyvisa DEBUG No user defined library files
2025-02-07 22:54:14,040 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:54:14,040 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:54:14,086 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000001AAFA1673D0>',) -> 0
2025-02-07 22:54:14,086 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:54:14,087 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000001AAFA1B94D0>, <ctypes.c_char_Array_256 object at 0x000001AAFA1B9550>, <ctypes.c_char_Array_256 object at 0x000001AAFA1B95D0>) -> 0
2025-02-07 22:54:14,087 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:54:14,109 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001AAFA1B95D0>') -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:54:14,109 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:54:14,109 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:54:14,109 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:54:14,109 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:14,109 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:14,109 pyvisa DEBUG No user defined library files
2025-02-07 22:54:14,109 pyvisa DEBUG The IVI implementation available
2025-02-07 22:54:14,109 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:14,119 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:14,120 pyvisa DEBUG No user defined library files
2025-02-07 22:54:14,120 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:54:14,120 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000001AAFA1BA250>, <ctypes.c_char_Array_256 object at 0x000001AAFA1BA350>, <ctypes.c_char_Array_256 object at 0x000001AAFA1BA2D0>) -> 0
2025-02-07 22:54:14,120 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:54:14,120 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000001AAFA1BA250>') -> 0
2025-02-07 22:54:14,120 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:54:14,120 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:54:14,120 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:14,120 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:14,131 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BA950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:54:14,331 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:14,331 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:14,331 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BA9D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:14,532 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:14,532 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:14,532 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BACD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:14,733 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:14,733 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:14,733 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BAFD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:14,934 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:14,934 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:14,934 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB2D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:15,134 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:15,134 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:15,134 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB5D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:15,335 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:15,335 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:15,335 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB8D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:15,535 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:15,535 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:15,535 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:15,736 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:15,736 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:15,736 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBC50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:15,936 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:15,936 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:15,936 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBAD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:16,137 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:16,137 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:16,137 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:16,338 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:16,338 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:16,338 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB8D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:16,539 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:16,539 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:16,539 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:16,739 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:16,739 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:16,739 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBC50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:16,940 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:16,940 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:16,940 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBAD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,140 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,140 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,140 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,341 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,341 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,341 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB8D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,542 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,542 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBC50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,542 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,542 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB5D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:54:17,744 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,744 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,744 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:17,945 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:17,945 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:17,945 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBCD0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:54:18,146 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:18,146 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:18,146 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:18,346 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:18,346 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:18,346 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:18,547 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:18,547 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:18,547 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB5D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:18,748 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:18,748 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:18,748 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:18,949 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:18,949 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:18,949 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBCD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:19,149 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:19,149 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:19,149 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:19,350 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:19,350 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:19,350 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:19,551 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:19,551 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:19,551 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB5D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:19,751 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:19,751 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:19,751 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:19,952 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:19,952 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:19,952 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBCD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:20,153 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:20,153 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:20,153 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:20,354 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:20,354 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:20,354 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:20,555 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:20,555 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:20,555 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB5D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:20,755 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:20,755 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:20,755 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1B9BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:20,956 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:20,956 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:20,956 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBCD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:21,157 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:21,157 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:21,157 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:21,157 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:54:21,160 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:54:21,160 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:21,160 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:21,160 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BB950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:21,161 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:21,161 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:21,188 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFA1BBBD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:21,263 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:54:21,408 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:54:21,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:54:21,408 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,409 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,410 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:54:21,411 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,412 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:54:21,413 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:54:21,970 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:21,970 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:22,074 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFA78B2D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:22,625 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:22,625 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:22,646 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFA78A050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:23,207 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:23,207 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:23,228 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD504D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:23,780 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:23,780 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:23,800 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD585D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:24,362 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:24,362 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:24,382 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD59650>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:24,939 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:24,939 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:24,954 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD583D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:25,517 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:25,517 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:25,539 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD5ACD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:26,099 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:26,099 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:26,120 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000001AAFCD5AE50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:54:26,685 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x000001AAFCD30FD0>
2025-02-07 22:54:26,725 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:54:26,725 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:54:26,729 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:26,732 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:26,732 pyvisa DEBUG No user defined library files
2025-02-07 22:54:26,732 pyvisa DEBUG The IVI implementation available
2025-02-07 22:54:26,732 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:26,736 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:26,736 pyvisa DEBUG No user defined library files
2025-02-07 22:54:26,736 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:54:26,736 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:54:26,736 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:54:26,736 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:54:26,736 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:54:26,736 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:54:26,736 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:54:26,736 pyvisa DEBUG COM3 - closing
2025-02-07 22:54:26,736 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:54:26,736 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:54:26,745 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:54:26,745 pyvisa DEBUG COM3 - is closed
2025-02-07 22:54:26,749 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:54:57,913 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:54:57,913 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:54:57,923 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:57,931 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:57,932 pyvisa DEBUG No user defined library files
2025-02-07 22:54:57,932 pyvisa DEBUG The IVI implementation available
2025-02-07 22:54:57,933 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:57,935 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:57,936 pyvisa DEBUG No user defined library files
2025-02-07 22:54:57,942 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:54:57,942 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:54:57,986 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000002626539ED50>',) -> 0
2025-02-07 22:54:57,986 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:54:57,986 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x00000262653F54D0>, <ctypes.c_char_Array_256 object at 0x00000262653F5550>, <ctypes.c_char_Array_256 object at 0x00000262653F55D0>) -> 0
2025-02-07 22:54:57,986 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:54:57,995 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000262653F55D0>') -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:54:57,995 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:54:57,995 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:54:57,995 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:54:57,995 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:57,995 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:58,005 pyvisa DEBUG No user defined library files
2025-02-07 22:54:58,005 pyvisa DEBUG The IVI implementation available
2025-02-07 22:54:58,006 pyvisa DEBUG No user defined configuration
2025-02-07 22:54:58,006 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:54:58,006 pyvisa DEBUG No user defined library files
2025-02-07 22:54:58,006 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:54:58,006 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x00000262653F6250>, <ctypes.c_char_Array_256 object at 0x00000262653F6350>, <ctypes.c_char_Array_256 object at 0x00000262653F62D0>) -> 0
2025-02-07 22:54:58,006 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:54:58,006 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x00000262653F6250>') -> 0
2025-02-07 22:54:58,006 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:54:58,006 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:54:58,015 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:58,015 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:58,026 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F6950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:54:58,226 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:58,226 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:58,226 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F69D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:58,427 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:58,427 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:58,427 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F6CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:58,628 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:58,628 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:58,628 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F6FD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:58,829 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:58,829 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:58,829 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F72D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:59,029 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:59,029 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:59,029 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:59,230 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:59,230 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:59,230 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:59,431 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:59,431 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:59,431 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F57D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:59,632 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:59,632 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:59,632 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:54:59,832 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:54:59,832 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:54:59,832 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:00,033 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:00,033 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:00,033 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:00,234 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:00,234 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:00,234 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:00,434 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:00,434 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:00,434 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F57D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:00,635 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:00,635 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:00,635 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:00,835 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:00,835 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:00,835 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:01,036 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,036 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,036 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,237 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,237 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F57D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,237 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,237 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:55:01,441 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,441 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,441 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:01,641 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,641 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,641 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:55:01,842 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:01,842 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:01,842 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:02,042 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:02,042 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:02,042 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:02,243 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:02,243 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:02,243 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:02,444 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:02,444 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:02,444 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:02,645 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:02,645 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:02,645 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:02,845 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:02,845 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:02,845 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:03,046 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:03,046 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:03,046 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:03,247 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:03,247 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:03,247 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:03,448 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:03,448 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:03,448 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:03,649 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:03,649 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:03,649 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:03,849 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:03,849 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:03,849 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:04,050 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:04,050 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:04,050 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:04,250 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:04,250 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:04,250 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:04,451 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:04,451 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:04,451 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:04,651 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:04,651 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:04,651 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:04,852 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:04,852 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:04,852 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:05,052 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:05,052 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:05,052 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F7CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:05,253 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:05,253 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:05,253 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:05,256 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x00000262653F78D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:05,256 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:05,279 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000262653F75D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:05,344 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,485 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,486 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:55:05,487 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,488 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:55:05,489 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:55:05,490 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:55:06,049 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:06,049 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:06,074 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000262659B32D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:06,635 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:06,635 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:06,652 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x00000262659B35D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:07,213 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:07,213 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:07,234 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x000002626545F4D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:07,794 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:07,794 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:07,814 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026265488ED0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:08,375 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:08,375 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:08,394 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026268F79950>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:08,956 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:08,956 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:08,977 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026268F780D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:09,664 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:09,664 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:09,679 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026268F7AAD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:10,240 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:55:10,240 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:55:10,260 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000026268F78050>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:55:10,823 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x000002626BC43ED0>
2025-02-07 22:55:10,872 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:55:10,872 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:55:10,872 pyvisa DEBUG No user defined configuration
2025-02-07 22:55:10,872 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:55:10,872 pyvisa DEBUG No user defined library files
2025-02-07 22:55:10,872 pyvisa DEBUG The IVI implementation available
2025-02-07 22:55:10,872 pyvisa DEBUG No user defined configuration
2025-02-07 22:55:10,872 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:55:10,883 pyvisa DEBUG No user defined library files
2025-02-07 22:55:10,883 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:55:10,883 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:55:10,883 pyvisa DEBUG COM3 - closing
2025-02-07 22:55:10,883 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:55:10,883 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:55:10,885 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:55:10,885 pyvisa DEBUG COM3 - is closed
2025-02-07 22:55:10,885 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:55:10,885 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:55:10,885 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:55:10,885 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:55:10,885 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:55:10,893 pyvisa DEBUG viClose(4097,) -> 0
2025-02-07 22:56:03,183 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:56:03,183 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:56:03,192 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:03,193 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:03,193 pyvisa DEBUG No user defined library files
2025-02-07 22:56:03,193 pyvisa DEBUG The IVI implementation available
2025-02-07 22:56:03,193 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:03,193 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:03,193 pyvisa DEBUG No user defined library files
2025-02-07 22:56:03,203 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-07 22:56:03,203 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-07 22:56:03,248 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x0000020C091373D0>',) -> 0
2025-02-07 22:56:03,248 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-07 22:56:03,248 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x0000020C091814D0>, <ctypes.c_char_Array_256 object at 0x0000020C09181550>, <ctypes.c_char_Array_256 object at 0x0000020C091815D0>) -> 0
2025-02-07 22:56:03,248 pyvisa DEBUG COM3 - opening ...
2025-02-07 22:56:03,268 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000020C091815D0>') -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG COM3 - is open with session 1
2025-02-07 22:56:03,268 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-07 22:56:03,268 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:56:03,268 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:56:03,268 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:03,273 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:03,273 pyvisa DEBUG No user defined library files
2025-02-07 22:56:03,273 pyvisa DEBUG The IVI implementation available
2025-02-07 22:56:03,273 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:03,277 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:03,278 pyvisa DEBUG No user defined library files
2025-02-07 22:56:03,278 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:56:03,280 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x0000020C09182250>, <ctypes.c_char_Array_256 object at 0x0000020C09182350>, <ctypes.c_char_Array_256 object at 0x0000020C091822D0>) -> 0
2025-02-07 22:56:03,280 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-07 22:56:03,280 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x0000020C09182250>') -> 0
2025-02-07 22:56:03,280 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is open with session 2
2025-02-07 22:56:03,280 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:56:03,280 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:03,280 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:03,280 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09182950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:56:03,489 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:03,489 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:03,489 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091829D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:03,690 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:03,690 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:03,690 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09182CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:03,891 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:03,891 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:03,891 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09182FD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:04,091 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:04,091 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:04,091 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091832D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:04,292 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:04,292 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:04,292 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:04,493 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:04,493 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:04,493 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:04,694 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:04,694 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:04,694 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09181BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:04,894 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:04,894 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:04,894 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:05,095 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:05,095 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:05,095 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:05,296 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:05,296 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:05,296 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:05,497 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:05,497 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:05,497 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:05,697 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:05,697 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:05,697 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09181BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:05,898 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:05,898 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:05,898 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,099 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,099 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,099 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,299 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,299 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,299 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,500 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,500 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,500 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,701 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,701 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,701 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09181BD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,901 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,901 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,901 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,902 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183AD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG viWrite(1, b'H:3\r\n', 5, 'c_ulong(5)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:06,902 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:06,902 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:56:07,110 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:07,110 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:07,110 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:07,310 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:07,310 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:07,310 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183950>, 20480, 'c_ulong(4)') -> 0
2025-02-07 22:56:07,511 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:07,511 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:07,511 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:07,712 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:07,712 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:07,712 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:07,913 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:07,913 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:07,913 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:08,113 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:08,113 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:08,113 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:08,314 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:08,314 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:08,314 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:08,515 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:08,515 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:08,515 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:08,716 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:08,716 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:08,716 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:08,916 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:08,916 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:08,916 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:09,117 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:09,117 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:09,117 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:09,317 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:09,317 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:09,317 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:09,518 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:09,518 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:09,518 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:09,719 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:09,719 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:09,719 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:09,919 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:09,919 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:09,919 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,120 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,120 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,120 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183C50>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,321 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,321 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,321 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183950>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,521 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,521 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,521 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091838D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,722 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,722 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,722 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C09183CD0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG viWrite(1, b'A:3+None8282.0\r\n', 16, 'c_ulong(16)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG viWrite(1, b'G:\r\n', 4, 'c_ulong(4)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG viWrite(1, b'!:3S\r\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG COM3 - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,724 pyvisa DEBUG viRead(1, <ctypes.c_char_Array_20480 object at 0x0000020C091835D0>, 20480, 'c_ulong(3)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:10,724 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:10,745 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C09183CD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:10,809 matplotlib.pyplot DEBUG Loaded backend qtagg version 5.15.11.
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,958 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,959 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-B.ttc', name='UD Digi Kyokasho N-B', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicR.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,960 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryo.ttc', name='Meiryo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UDDigiKyokashoN-R.ttc', name='UD Digi Kyokasho N-R', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SimsunExtG.ttf', name='SimSun-ExtG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,961 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msmincho.ttc', name='MS Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\meiryob.ttc', name='Meiryo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDGothicB.ttc', name='BIZ UDGothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumindb.ttf', name='Yu Mincho', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-07 22:56:10,962 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yumin.ttf', name='Yu Mincho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BIZ-UDMinchoM.ttc', name='BIZ UDMincho', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\yuminl.ttf', name='Yu Mincho', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-07 22:56:10,963 matplotlib.font_manager DEBUG findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\DK-microscope\\miniconda3\\envs\\pymodaq\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-07 22:56:11,520 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:11,520 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:11,542 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C097572D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:12,103 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:12,103 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:12,120 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C097575D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:12,683 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:12,683 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:12,701 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD303D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:13,265 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:13,265 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:13,287 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD3C550>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:13,846 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:13,846 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:13,866 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD3DA50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:14,427 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:14,427 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:14,444 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD3C7D0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:15,005 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:15,005 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:15,026 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD3EBD0>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:15,585 pyvisa DEBUG viWrite(2, b'READ?\n', 6, 'c_ulong(6)') -> 0
2025-02-07 22:56:15,585 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - reading 20480 bytes (last status <StatusCode.success_max_count_read: 1073676294>)
2025-02-07 22:56:15,608 pyvisa DEBUG viRead(2, <ctypes.c_char_Array_20480 object at 0x0000020C0BD3EB50>, 20480, 'c_ulong(15)') -> 0
2025-02-07 22:56:16,176 matplotlib.colorbar DEBUG locator: <matplotlib.ticker.AutoLocator object at 0x0000020C097D9650>
2025-02-07 22:56:16,226 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-07 22:56:16,226 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-07 22:56:16,228 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:16,230 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:16,231 pyvisa DEBUG No user defined library files
2025-02-07 22:56:16,231 pyvisa DEBUG The IVI implementation available
2025-02-07 22:56:16,232 pyvisa DEBUG No user defined configuration
2025-02-07 22:56:16,234 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-07 22:56:16,236 pyvisa DEBUG No user defined library files
2025-02-07 22:56:16,236 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-07 22:56:16,236 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-07 22:56:16,236 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - closing
2025-02-07 22:56:16,236 pyvisa DEBUG viDisableEvent(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:56:16,236 pyvisa DEBUG viDiscardEvents(2, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:56:16,236 pyvisa DEBUG viClose(2,) -> 0
2025-02-07 22:56:16,236 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - is closed
2025-02-07 22:56:16,236 pyvisa DEBUG COM3 - closing
2025-02-07 22:56:16,236 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-07 22:56:16,236 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-07 22:56:16,245 pyvisa DEBUG viClose(1,) -> 0
2025-02-07 22:56:16,245 pyvisa DEBUG COM3 - is closed
2025-02-07 22:56:16,247 pyvisa DEBUG viClose(4097,) -> 0
2025-02-19 06:34:41,631 asyncio DEBUG Using proactor: IocpProactor
2025-02-19 06:35:45,936 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-19 06:35:45,936 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-19 06:35:45,949 pyvisa DEBUG No user defined configuration
2025-02-19 06:35:45,955 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:35:45,955 pyvisa DEBUG No user defined library files
2025-02-19 06:35:45,955 pyvisa DEBUG The IVI implementation available
2025-02-19 06:35:45,955 pyvisa DEBUG No user defined configuration
2025-02-19 06:35:45,958 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:35:45,958 pyvisa DEBUG No user defined library files
2025-02-19 06:35:45,976 pyvisa DEBUG Library signatures: 90 ok, 0 failed
2025-02-19 06:35:45,976 pyvisa DEBUG Created library wrapper for C:\WINDOWS\system32\visa32.dll
2025-02-19 06:35:46,869 pyvisa DEBUG viOpenDefaultRM('<ViObject object at 0x000002CAD35342D0>',) -> 0
2025-02-19 06:35:46,869 pyvisa DEBUG Created ResourceManager with session 4097
2025-02-19 06:35:46,870 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000002CAD3534550>, <ctypes.c_char_Array_256 object at 0x000002CAD3534650>, <ctypes.c_char_Array_256 object at 0x000002CAD35346D0>) -> 0
2025-02-19 06:35:46,870 pyvisa DEBUG COM3 - opening ...
2025-02-19 06:35:46,889 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002CAD3534550>') -> 0
2025-02-19 06:35:46,889 pyvisa DEBUG COM3 - is open with session 1
2025-02-19 06:35:46,890 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-19 06:35:46,890 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-19 06:35:46,890 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-19 06:35:46,890 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-19 06:35:46,890 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-19 06:35:46,890 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-19 06:35:46,891 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-19 06:35:46,891 pyvisa DEBUG No user defined configuration
2025-02-19 06:35:46,898 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:35:46,898 pyvisa DEBUG No user defined library files
2025-02-19 06:35:46,899 pyvisa DEBUG The IVI implementation available
2025-02-19 06:35:46,899 pyvisa DEBUG No user defined configuration
2025-02-19 06:35:46,907 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:35:46,907 pyvisa DEBUG No user defined library files
2025-02-19 06:35:46,908 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-19 06:35:46,909 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000002CAD3535050>, <ctypes.c_char_Array_256 object at 0x000002CAD35352D0>, <ctypes.c_char_Array_256 object at 0x000002CAD35353D0>) -> 0
2025-02-19 06:35:46,909 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-19 06:35:46,910 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002CAD3535350>') -> -1073807343
2025-02-19 06:35:48,238 pyvisa DEBUG COM3 - closing
2025-02-19 06:35:48,238 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-19 06:35:48,239 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-19 06:35:48,239 pyvisa DEBUG viClose(1,) -> 0
2025-02-19 06:35:48,240 pyvisa DEBUG COM3 - is closed
2025-02-19 06:41:56,803 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-19 06:41:56,804 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-19 06:41:56,804 pyvisa DEBUG No user defined configuration
2025-02-19 06:41:56,819 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:41:56,819 pyvisa DEBUG No user defined library files
2025-02-19 06:41:56,819 pyvisa DEBUG The IVI implementation available
2025-02-19 06:41:56,820 pyvisa DEBUG No user defined configuration
2025-02-19 06:41:56,822 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:41:56,822 pyvisa DEBUG No user defined library files
2025-02-19 06:41:56,822 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-19 06:41:56,822 pyvisa DEBUG viParseRsrcEx(4097, 'COM3', 'c_ushort(4)', 'c_ushort(3)', <ctypes.c_char_Array_256 object at 0x000002CAD3535D50>, <ctypes.c_char_Array_256 object at 0x000002CAD3535E50>, <ctypes.c_char_Array_256 object at 0x000002CAD3535F50>) -> 0
2025-02-19 06:41:56,823 pyvisa DEBUG COM3 - opening ...
2025-02-19 06:41:56,830 pyvisa DEBUG viOpen(4097, 'COM3', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002CAD3535D50>') -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG COM3 - is open with session 1
2025-02-19 06:41:56,831 pyvisa DEBUG viSetAttribute(1, 1073676321, 9600) -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG viSetAttribute(1, 1073676322, 8) -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG viSetAttribute(1, 1073676323, <Parity.none: 0>) -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar: 1073676312>, 10) -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG viSetAttribute(1, <ResourceAttribute.termchar_enabled: 1073676344>, 1) -> 0
2025-02-19 06:41:56,831 pyvisa DEBUG No visa library specified, trying to find alternatives.
2025-02-19 06:41:56,831 pyvisa DEBUG Environment variable PYVISA_LIBRARY is unset.
2025-02-19 06:41:56,831 pyvisa DEBUG No user defined configuration
2025-02-19 06:41:56,835 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:41:56,835 pyvisa DEBUG No user defined library files
2025-02-19 06:41:56,835 pyvisa DEBUG The IVI implementation available
2025-02-19 06:41:56,835 pyvisa DEBUG No user defined configuration
2025-02-19 06:41:56,837 pyvisa DEBUG Automatically found library files: [None, 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa32.dll', 'C:\\WINDOWS\\system32\\visa64.dll', 'C:\\WINDOWS\\system32\\visa64.dll']
2025-02-19 06:41:56,838 pyvisa DEBUG No user defined library files
2025-02-19 06:41:56,838 pyvisa DEBUG Reusing ResourceManager with session 4097
2025-02-19 06:41:56,838 pyvisa DEBUG viParseRsrcEx(4097, 'USB0::0x05E6::0x2100::1149087::INSTR', 'c_ushort(7)', 'c_ushort(0)', <ctypes.c_char_Array_256 object at 0x000002CAD3536C50>, <ctypes.c_char_Array_256 object at 0x000002CAD3536CD0>, <ctypes.c_char_Array_256 object at 0x000002CAD3536DD0>) -> 0
2025-02-19 06:41:56,838 pyvisa DEBUG USB0::0x05E6::0x2100::1149087::0::INSTR - opening ...
2025-02-19 06:41:56,839 pyvisa DEBUG viOpen(4097, 'USB0::0x05E6::0x2100::1149087::0::INSTR', <AccessModes.no_lock: 0>, 0, '<ViObject object at 0x000002CAD3536D50>') -> -1073807343
2025-02-19 06:41:59,030 pyvisa DEBUG COM3 - closing
2025-02-19 06:41:59,031 pyvisa DEBUG viDisableEvent(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676291
2025-02-19 06:41:59,031 pyvisa DEBUG viDiscardEvents(1, <EventType.all_enabled: 1073709055>, <EventMechanism.all: 65535>) -> 1073676292
2025-02-19 06:41:59,031 pyvisa DEBUG viClose(1,) -> 0
2025-02-19 06:41:59,031 pyvisa DEBUG COM3 - is closed
2025-02-19 07:00:02,251 pyvisa DEBUG Closing ResourceManager (session: 4097)
2025-02-19 07:00:02,259 pyvisa DEBUG viClose(4097,) -> 0
